# 🎬 StreamHub – Ultra-Fast Torrent Video Streaming Application

**StreamHub** is a blazing-fast, ad-free, and fully responsive web application that lets you stream videos directly from **magnet links**, **torrent files**, or **direct video URLs** — right in your browser.

Powered by modern technologies like **WebTorrent**, **Node.js**, and **Vite**, StreamHub delivers a smooth, buffer-free video experience using decentralized peer-to-peer protocols — all locally on your device.

---

## 🚀 Key Features

- 🔗 **Instant Torrent Streaming** – Paste a magnet URI and stream instantly.
- 🎛️ **Custom Video Controls** – Play, pause, skip 10s forward/back, and keyboard shortcuts.
- 🔍 **Smart File Detection** – Automatically picks the primary video file from the torrent.
- 📊 **Live Torrent Stats** – Shows peers, download speeds, file size, and more.
- 🌙 **Dark Mode UI** – Clean, modern, and mobile-first design.

---

## 📦 Tech Stack

| Layer                | Technology                                       |
|----------------------|--------------------------------------------------|
| **Frontend**         | HTML5, CSS3, JavaScript, Vite                    |
| **Backend**          | Node.js, Express.js                              |
| **Streaming Engine** | WebTorrent (WebRTC + HTTP Range Streaming)       |
| **Deployment**       | Runs locally (cross-platform with Node.js)       |

---

## 🛠️ Installation & Setup

### ⚙️ Prerequisites

- **Node.js**: v16.x or later
- **Browser**: Any modern browser with WebRTC support (Chrome, Firefox, Edge)

### 📥 Steps to Install and Run

```bash
# 1. Clone the repository
git clone https://github.com/keerthivardhanm/streamhub.git
cd streamhub

# 2. Install dependencies
npm install

# 3. Start the application (both backend + frontend)
npm run dev
🟢 By default:

Backend runs on http://localhost:3000

Frontend (Vite dev server) runs on http://localhost:5173

📡 API Endpoints (Backend)
Method	Endpoint	Description
POST	/api/start	Starts streaming a torrent using a magnet link
GET	/api/stream/:infoHash/:fileIndex	Streams video using HTTP range support
GET	/api/info/:infoHash	Returns metadata & stats of the torrent
GET	/api/torrents	Lists active torrent sessions
GET	/api/health	Returns app health status

🧪 Development Notes
If you're working on a monorepo:

bash
Copy
Edit
/streamhub
  ├── client   # Vite frontend app
  └── server   # Express backend with WebTorrent
Make sure npm run dev in root is configured to run both servers via concurrently or a similar tool:

json
Copy
Edit
// package.json
"scripts": {
  "dev": "concurrently \"npm run dev --prefix server\" \"npm run dev --prefix client\""
}
Install concurrently:

bash
Copy
Edit
npm install concurrently --save-dev
⚖️ License
This project is licensed under the MIT License.

👤 Author
Keerthivardhan M
Full Stack Developer | Cybersecurity Enthusiast
